import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import random
import seaborn as sns
from math import sqrt
from scipy.stats import shapiro


anacs = [15.00, 13.50, 8.00, 11.50, 7.25, 14.00, 5.75, 7.00, 18.50, 13.25, 13.00, 7.50, 16.50, 13.00, 16.00, 15.50, 13.50, 16.00, 15.00, 16.50, 14.75, 15.50, 10.00, 16.75, 13.00, 16.50, 5.50, 8.50, 10.50, 12.00, 11.00, 9.50, 12.00, 9.75, 17.50, 7.50, 9.75, 10.50, 11.00, 11.50, 17.50, 14.50, 11.50, 15.75, 5.25, 10.50, 8.50, 14.25, 7.50, 10.50, 12.00, 11.75, 11.25, 6.75, 13.50, 10.25, 12.75, 14.50, 13.50, 11.50, 11.25, 5.00, 11.25, 12.00, 16.50, 11.50, 15.75, 13.00, 12.25, 7.00, 12.75, 15.00, 14.50, 11.00, 17.00, 7.50, 13.00, 16.00, 13.00, 12.50, 13.50, 12.00, 16.75, 14.00, 13.75, 10.75, 12.25, 9.50, 12.00, 8.00, 11.50, 11.00, 13.00, 12.50, 8.75, 13.00, 17.00, 7.75, 11.50, 11.25, 5.00, 13.00, 11.25, 12.00, 17.50, 14.50, 14.50, 15.00, 15.00, 16.00, 8.75, 13.50, 10.25, 6.75, 11.75, 13.50, 15.00, 11.50, 17.75, 12.75, 17.00, 14.50, 8.00, 13.50, 15.50, 12.50, 8.50, 14.50, 9.00, 13.00, 14.00, 8.00, 12.50, 14.50, 11.50, 17.00, 7.50, 11.50, 5.00, 11.50, 15.00, 14.50, 9.50, 16.00, 10.50, 11.50, 17.50, 7.75, 15.00, 14.50, 11.00, 14.50, 8.75, 15.75, 14.50, 11.00, 11.50, 13.75, 8.00, 12.00, 9.75, 17.00, 12.50, 14.25, 14.00, 10.00, 8.00, 12.00, 12.25, 13.75, 7.50, 14.25, 7.00, 13.75, 16.50, 13.00, 12.00, 10.50, 9.00, 12.00, 17.75, 8.25, 14.50, 13.00, 14.50, 15.00, 12.00, 11.00, 9.50, 12.00, 13.00, 12.50, 16.00, 12.00, 13.50, 7.00, 14.50, 8.50, 15.50, 13.75, 12.50, 8.50, 16.00, 11.75, 9.00, 10.50, 15.00, 14.00, 11.00, 14.00, 9.00, 12.00, 13.00, 12.75, 8.50, 9.50, 9.00, 15.50, 16.00, 12.00, 14.50, 8.25, 10.25, 11.00, 14.50, 12.50, 5.75, 15.00, 13.50, 14.50, 12.50, 8.75, 12.00, 10.75, 8.00] 
prog = [
    9.50, 5.50, 17.00,
    13.50, 14.50, 10.50,
    10.50, 9.00, 12.00,
    11.50, 13.00, 10.50,
    13.00, 3.00, 8.00,
    9.00, 11.50, 14.00,
    13.00, 16.50, 8.50,
    8.00, 15.50, 11.50,
    5.50, 10.00, 14.50,
    14.50, 14.00, 10.50,
    7.50, 10.00, 5.00,
    12.00, 10.50, 6.50,
    5.50, 16.50, 6.00,
    13.50, 16.50, 9.50,
    18.00, 13.00, 8.50,
    13.50, 9.00, 9.00,
    14.00, 10.00, 11.00,
    11.50, 12.50, 18.00,
    11.00, 7.00, 13.50,
    10.00, 0.00, 12.50,
    17.00, 13.50, 15.00,
    6.00, 12.50, 16.50,
    14.50, 17.50, 11.50,
    9.00, 8.00, 10.00,
    18.00, 12.00, 10.50,
    12.00, 8.00, 9.50,
    11.50, 5.50, 15.00,
    16.50, 6.00, 10.50,
    11.00, 10.50, 7.00,
    13.50, 16.50, 12.50,
    10.00, 11.00, 11.50,
    7.00, 16.50, 11.50,
    15.00, 13.00, 8.00,
    11.00, 14.00, 5.50,
    13.00, 13.00, 12.00,
    8.50, 11.50, 15.00,
    8.00, 14.50, 17.00,
    12.00, 6.00, 9.50,
    12.00, 10.00, 15.00,
    10.00, 14.50, 10.00,
    15.00, 14.50, 11.50,
    9.00, 5.00, 3.50,
    7.50, 7.00, 10.00,
    12.00, 11.00, 11.00,
    7.50, 13.00, 13.50,
    11.00, 14.00, 12.50,
    5.00, 15.00, 10.50,
    10.50, 8.00, 11.50,
    8.50, 8.50, 14.50,
    14.00, 11.50, 17.00,
    14.00, 12.00, 18.00,
    12.00, 6.00, 9.50,
    12.00, 10.00
]

# Effectuer le test de Shapiro-Wilk pour chaque ensemble de données
stat1, p_value1 = shapiro(anacs)
stat2, p_value2 = shapiro(prog)

print("P_v anacs : ", p_value1)
print("P_v prog : ", p_value2)

# Créer un seul histogramme avec deux ensembles de données
sns.histplot(anacs, kde=False, bins=15, color='blue', label='Notes 1')
sns.histplot(prog, kde=False, bins=15, color='orange', label='Notes 2')

# Ajouter des labels et un titre
plt.xlabel('Valeurs')
plt.ylabel('Densité')
plt.title('Histogramme de densité')


# Afficher le plot
plt.show()